# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AppCreationResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, app_stats: object=None, app_uuid: str=None):  # noqa: E501
        """AppCreationResult - a model defined in Swagger

        :param app_stats: The app_stats of this AppCreationResult.  # noqa: E501
        :type app_stats: object
        :param app_uuid: The app_uuid of this AppCreationResult.  # noqa: E501
        :type app_uuid: str
        """
        self.swagger_types = {
            'app_stats': object,
            'app_uuid': str
        }

        self.attribute_map = {
            'app_stats': 'app_stats',
            'app_uuid': 'app_uuid'
        }
        self._app_stats = app_stats
        self._app_uuid = app_uuid

    @classmethod
    def from_dict(cls, dikt) -> 'AppCreationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AppCreationResult of this AppCreationResult.  # noqa: E501
        :rtype: AppCreationResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_stats(self) -> object:
        """Gets the app_stats of this AppCreationResult.


        :return: The app_stats of this AppCreationResult.
        :rtype: object
        """
        return self._app_stats

    @app_stats.setter
    def app_stats(self, app_stats: object):
        """Sets the app_stats of this AppCreationResult.


        :param app_stats: The app_stats of this AppCreationResult.
        :type app_stats: object
        """
        if app_stats is None:
            raise ValueError("Invalid value for `app_stats`, must not be `None`")  # noqa: E501

        self._app_stats = app_stats

    @property
    def app_uuid(self) -> str:
        """Gets the app_uuid of this AppCreationResult.


        :return: The app_uuid of this AppCreationResult.
        :rtype: str
        """
        return self._app_uuid

    @app_uuid.setter
    def app_uuid(self, app_uuid: str):
        """Sets the app_uuid of this AppCreationResult.


        :param app_uuid: The app_uuid of this AppCreationResult.
        :type app_uuid: str
        """
        if app_uuid is None:
            raise ValueError("Invalid value for `app_uuid`, must not be `None`")  # noqa: E501

        self._app_uuid = app_uuid
