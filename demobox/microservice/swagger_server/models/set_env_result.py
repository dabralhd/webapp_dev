# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SetEnvResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, log_file: str=None):  # noqa: E501
        """SetEnvResult - a model defined in Swagger

        :param log_file: The log_file of this SetEnvResult.  # noqa: E501
        :type log_file: str
        """
        self.swagger_types = {
            'log_file': str
        }

        self.attribute_map = {
            'log_file': 'log_file'
        }
        self._log_file = log_file

    @classmethod
    def from_dict(cls, dikt) -> 'SetEnvResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SetEnvResult of this SetEnvResult.  # noqa: E501
        :rtype: SetEnvResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log_file(self) -> str:
        """Gets the log_file of this SetEnvResult.


        :return: The log_file of this SetEnvResult.
        :rtype: str
        """
        return self._log_file

    @log_file.setter
    def log_file(self, log_file: str):
        """Sets the log_file of this SetEnvResult.


        :param log_file: The log_file of this SetEnvResult.
        :type log_file: str
        """
        if log_file is None:
            raise ValueError("Invalid value for `log_file`, must not be `None`")  # noqa: E501

        self._log_file = log_file
